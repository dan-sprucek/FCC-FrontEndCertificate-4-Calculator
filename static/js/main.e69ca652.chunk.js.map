{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","handleChange","event","persist","target","innerHTML","setState","innerValue","outerValue","lastCharIsOperator","minusNumberOperator","equalsClicked","decimalPointAdded","numbers","operands","test","state","parseInt","prevState","slice","length","numbersLogged","match","operandsLogged","multiplyDivideIndex","i","operand","firstNum","parseFloat","secondNum","unshift","splice","sum","toFixed","keystrokes","1","2","3","4","5","6","7","8","9","0","keytest","document","addEventListener","hasOwnProperty","key","getElementById","click","className","style","maxWidth","maxHeight","backgroundColor","id","height","this","onClick","React","Component","Boolean","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e69ca652.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      innerValue: \"0\",\n      outerValue: \"0\",\n      lastCharIsOperator: false,\n      minusNumberOperator: false,\n      equalsClicked: false,\n      decimalPointAdded: false,\n      numbers: [],\n      operands: [],\n      keystrokes: {\n        1: \"one\",\n        2: \"two\",\n        3: \"three\",\n        4: \"four\",\n        5: \"five\",\n        6: \"six\",\n        7: \"seven\",\n        8: \"eight\",\n        9: \"nine\",\n        0: \"zero\",\n        \"-\": \"subtract\",\n        \"+\": \"add\",\n        \"/\": \"divide\",\n        \"*\": \"multiply\",\n        \".\": \"decimal\",\n        \"Enter\": \"equals\",\n        \"Delete\": \"clear\"\n      },\n      keytest: [\n        1,\n        2,\n        3\n      ]\n      \n    }\n    document.addEventListener(\"keydown\", (event) => {\n      if (this.state.keystrokes.hasOwnProperty(event.key)) {\n        document.getElementById(this.state.keystrokes[event.key]).click()\n      }\n    })\n\n  }\n  \n  //   let pressedKey = event.key\n      // if (this.state.keystrokes.indexOf(pressedKey) >= 0) {\n      //   document.getElementById(pressedKey).play()\n      //   this.setState({\n      //     name: this.state.songs[this.state.keystrokes.indexOf(pressedKey)]\n  //       })\n  //     }\n  //   }\n  // }\n\n  handleChange = (event) => {\n    event.persist()\n    if (event.target.innerHTML === \"AC\") {\n      this.setState ({\n        innerValue: \"0\",\n        outerValue: \"0\",\n        lastCharIsOperator: false,\n        minusNumberOperator: false,\n        equalsClicked: false,\n        decimalPointAdded: false,\n        numbers: [],\n        operands: []\n      })\n    } else if (/\\d/.test(event.target.innerHTML)) {\n      if (this.state.equalsClicked) {\n        this.setState ({\n          innerValue: event.target.innerHTML,\n          outerValue: event.target.innerHTML,\n          equalsClicked: false,\n        })\n      } else if (this.state.outerValue === \"0\") {\n          if (parseInt(event.target.innerHTML) === 0) {\n            return null\n          } else {\n            this.setState(prevState => {\n              return ({\n                innerValue: prevState.innerValue.slice(0, prevState.innerValue.length - 1) + event.target.innerHTML,\n                outerValue: event.target.innerHTML\n              })\n            })\n          }\n      } else if (this.state.lastCharIsOperator) {\n          this.setState(prevState => {\n            return ({\n              innerValue: prevState.innerValue + event.target.innerHTML,\n              outerValue: event.target.innerHTML,\n              lastCharIsOperator: false,\n              minusNumberOperator: false\n            })\n          })\n      } else {\n          this.setState(prevState => {\n            return ({\n              innerValue: prevState.innerValue + event.target.innerHTML,\n              outerValue: prevState.outerValue + event.target.innerHTML\n            })\n          })\n        }\n    } else if (/[/*\\-+]/.test(event.target.innerHTML)) {\n        if (event.target.innerHTML === \"-\" && this.state.innerValue === \"0\") {\n          this.setState ({\n            innerValue: event.target.innerHTML,\n            outerValue: event.target.innerHTML\n          })\n        } else if (this.state.equalsClicked) {\n          this.setState (prevState => {\n            return ({\n              innerValue: prevState.outerValue + event.target.innerHTML,\n              outerValue: event.target.innerHTML,\n              lastCharIsOperator: true,\n              equalsClicked: false,\n              decimalPointAdded: false,\n            })\n          })\n        } else if (this.state.lastCharIsOperator) {\n            if (event.target.innerHTML === \"-\" && (this.state.outerValue === \"*\" || this.state.outerValue === \"/\" || this.state.outerValue === \"+\")) {\n              this.setState(prevState => {\n                return ({\n                  innerValue: prevState.innerValue + event.target.innerHTML,\n                  outerValue: event.target.innerHTML,\n                  minusNumberOperator: true\n                })\n              })\n            } else if (event.target.innerHTML !== \"-\" && this.state.minusNumberOperator) {\n              this.setState(prevState => {\n                return ({\n                  innerValue: prevState.innerValue.slice(0, prevState.innerValue.length - 2) + event.target.innerHTML,\n                  outerValue: event.target.innerHTML,\n                  minusNumberOperator: false\n                })\n              })\n            } else {\n              this.setState(prevState => {\n                return ({\n                  innerValue: prevState.innerValue.slice(0, prevState.innerValue.length - 1) + event.target.innerHTML,\n                  outerValue: event.target.innerHTML\n                })\n              })\n            }\n        } else {\n            this.setState(prevState => {\n              return ({\n                innerValue: prevState.innerValue + event.target.innerHTML,\n                outerValue: event.target.innerHTML,\n                lastCharIsOperator: true,\n                decimalPointAdded: false\n              })\n            })\n        }\n    } else if (/\\./.test(event.target.innerHTML)) {\n      if (this.state.equalsClicked) {\n          this.setState({\n            innerValue: \"0.\",\n            outerValue: \"0.\",\n            decimalPointAdded: true,\n            equalsClicked: false\n          })\n      } else if (this.state.decimalPointAdded) {\n          return null\n      } else if (this.state.lastCharIsOperator) {\n        this.setState(prevState => {\n          return ({\n            innerValue: prevState.innerValue + \"0.\",\n            outerValue: \"0.\",\n            decimalPointAdded: true,\n            lastCharIsOperator: false\n          })\n        })\n      } else {\n        this.setState(prevState => {\n          return ({\n            innerValue: prevState.innerValue + event.target.innerHTML,\n            outerValue: prevState.outerValue + event.target.innerHTML,\n            decimalPointAdded: true,\n            lastCharIsOperator: false\n          })\n        })\n      }\n    } else if (/=/.test(event.target.innerHTML)) {\n        if (this.state.equalsClicked) {\n          return null\n        } else {\n          let numbersLogged = this.state.innerValue.match(/^-\\d+\\.?\\d*|(?<=[/*+])-\\d+\\.?\\d*|\\d+\\.?\\d*/g);\n          let operandsLogged = this.state.innerValue.match(/(?<=\\d)[/*\\-+]/g);\n          var multiplyDivideIndex = [];\n          (function() {\n            for (let i = 0; i < numbersLogged.length - 1; i++) {\n              let operand = operandsLogged[i]\n              let firstNum = parseFloat(numbersLogged[i])\n              let secondNum = parseFloat(numbersLogged[i + 1])\n              if (operand === \"*\") {\n                numbersLogged[i + 1] = firstNum * secondNum\n                multiplyDivideIndex.unshift(i)\n              } else if (operand === \"/\") {\n                numbersLogged[i + 1] = firstNum / secondNum\n                multiplyDivideIndex.unshift(i)\n              }\n            }\n            for (let i = 0; i < multiplyDivideIndex.length; i++) {\n              numbersLogged.splice(multiplyDivideIndex[i], 1)\n              operandsLogged.splice(multiplyDivideIndex[i], 1)\n            }\n          }())\n          var sum = parseFloat(numbersLogged[0]);\n          (function() {\n            for (let i = 0; i < numbersLogged.length - 1; i++) {\n              let operand = operandsLogged[i]\n              let secondNum = parseFloat(numbersLogged[i + 1])\n              if (operand === \"+\") {\n                sum += secondNum\n              } else if (operand === \"-\") {\n                sum -= secondNum\n              } \n            }\n          }())\n          sum = parseFloat((sum).toFixed(12));\n        }\n       this.setState(prevState => {\n         return ({\n           innerValue: prevState.innerValue + \"=\" + sum,\n           outerValue: sum,\n           equalsClicked: true,\n           lastCharIsOperator: false,\n           minusNumberOperator: false,\n           decimalPointAdded: false\n         })\n      })\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n      <div className=\"mx-auto vh-100 vw-100 text-white p-0 border border-secondary d-flex flex-column\" style={{maxWidth: 400, maxHeight: 600, backgroundColor: \"black\"}}>\n        <div className=\"d-flex justify-content-end\" id=\"displayInner\" style={{height: 40}}>\n          <p className=\"pr-1\">{this.state.innerValue}</p>\n        </div>\n        <div className=\"d-flex justify-content-end align-items-center\" id=\"display\"style={{height: 60}}>\n          <p className=\"pr-1 m-0\">{this.state.outerValue}</p>\n          </div>\n        <div className=\"flex-fill row p-0 m-0\" style={{maxHeight: 498}}>\n          <button className=\"col-9 btn-danger\" id=\"clear\" onClick={this.handleChange}>AC</button>\n          <button className=\"col-3 btn-light\" id=\"divide\" onClick={this.handleChange}>/</button>\n          <button className=\"col-3 btn-light\" id=\"seven\" onClick={this.handleChange}>7</button>\n          <button className=\"col-3 btn-light\" id=\"eight\" onClick={this.handleChange}>8</button>\n          <button className=\"col-3 btn-light\" id=\"nine\" onClick={this.handleChange}>9</button>\n          <button className=\"col-3 btn-light\" id=\"multiply\" onClick={this.handleChange}>*</button>\n          <button className=\"col-3 btn-light\" id=\"four\" onClick={this.handleChange}>4</button>\n          <button className=\"col-3 btn-light\" id=\"five\" onClick={this.handleChange}>5</button>\n          <button className=\"col-3 btn-light\" id=\"six\" onClick={this.handleChange}>6</button>\n          <button className=\"col-3 btn-light\" id=\"subtract\" onClick={this.handleChange}>-</button>\n          <button className=\"col-3 btn-light\" id=\"one\" onClick={this.handleChange}>1</button>\n          <button className=\"col-3 btn-light\" id=\"two\" onClick={this.handleChange}>2</button>\n          <button className=\"col-3 btn-light\" id=\"three\" onClick={this.handleChange}>3</button>\n          <button className=\"col-3 btn-light\" id=\"add\" onClick={this.handleChange}>+</button>\n          <button className=\"col-6 btn-light\" id=\"zero\" onClick={this.handleChange}>0</button>\n          <button className=\"col-3 btn-light\" id=\"decimal\" onClick={this.handleChange}>.</button>\n          <button className=\"col-3 btn-primary\" id=\"equals\" onClick={this.handleChange}>=</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n\n\n// User Story #1: My calculator should contain a clickable element containing an = (equal sign) with a corresponding id=\"equals\".\n\n// User Story #2: My calculator should contain 10 clickable elements containing one number each from 0-9, with the following corresponding IDs: id=\"zero\", id=\"one\", id=\"two\", id=\"three\", id=\"four\", id=\"five\", id=\"six\", id=\"seven\", id=\"eight\", and id=\"nine\".\n\n// User Story #3: My calculator should contain 4 clickable elements each containing one of the 4 primary mathematical operators with the following corresponding IDs: id=\"add\", id=\"subtract\", id=\"multiply\", id=\"divide\".\n\n// User Story #4: My calculator should contain a clickable element containing a . (decimal point) symbol with a corresponding id=\"decimal\".\n\n// User Story #5: My calculator should contain a clickable element with an id=\"clear\".\n\n// User Story #6: My calculator should contain an element to display values with a corresponding id=\"display\".\n\n// User Story #7: At any time, pressing the clear button clears the input and output values, and returns the calculator to its initialized state; 0 should be shown in the element with the id of display.\n\n// User Story #8: As I input numbers, I should be able to see my input in the element with the id of display.\n\n// User Story #9: In any order, I should be able to add, subtract, multiply and divide a chain of numbers of any length, and when I hit =, the correct result should be shown in the element with the id of display.\n\n// User Story #10: When inputting numbers, my calculator should not allow a number to begin with multiple zeros.\n\n// User Story #11: When the decimal element is clicked, a . should append to the currently displayed value; two . in one number should not be accepted.\n\n// User Story #12: I should be able to perform any operation (+, -, *, /) on numbers containing decimal points.\n\n// User Story #13: If 2 or more operators are entered consecutively, the operation performed should be the last operator entered (excluding the negative (-) sign). For example, if 5 + * 7 = is entered, the result should be 35 (i.e. 5 * 7); if 5 * - 5 = is entered, the result should be -25 (i.e. 5 x (-5)).\n\n// User Story #14: Pressing an operator immediately following = should start a new calculation that operates on the result of the previous evaluation.\n\n// User Story #15: My calculator should have several decimal places of precision when it comes to rounding (note that there is no exact standard, but you should be able to handle calculations like 2 / 7 with reasonable precision to at least 4 decimal places).\n\n// Note On Calculator Logic: It should be noted that there are two main schools of thought on calculator input logic: immediate execution logic and formula logic. Our example utilizes formula logic and observes order of operation precedence, immediate execution does not. Either is acceptable, but please note that depending on which you choose, your calculator may yield different results than ours for certain equations (see below example). As long as your math can be verified by another production calculator, please do not consider this a bug.\n\n// EXAMPLE: 3 + 5 x 6 - 2 / 4 =\n\n// Immediate Execution Logic: 11.5\n// Formula/Expression Logic: 32.5","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}